import { useCallback, useEffect, useRef } from "react";
import { Button, Textfield } from "@belousovjr/uikit";
import { SearchIcon, SendHorizonalIcon } from "lucide-react";
import { signOut, useSession } from "next-auth/react";
import Image from "next/image";
import { useMemo, useState } from "react";
import { LogOutIcon } from "lucide-react";
import GoogleAuthButton from "./GoogleAuthButton";
import TutorialTip from "./TutorialTip";
import useTutorial from "../lib/helpers/useTutorial";

export default function Header({
  onSearch,
  currentSearch,
  isSearch,
}: {
  onSearch: (value: string) => unknown;
  currentSearch: string;
  isSearch?: boolean;
}) {
  const form = useRef<HTMLFormElement>(null);
  const { checkStatus, lastActiveStatus } = useTutorial();

  const [isLogoutLoading, setIsAuthLoading] = useState(false);
  const { data: session, status } = useSession();

  const isLoading = useMemo(
    () => status === "loading" || isLogoutLoading,
    [isLogoutLoading, status]
  );

  const focusForm = useCallback(() => {
    const input = form.current?.elements.namedItem(
      "search"
    ) as HTMLInputElement | null;
    input?.focus();
  }, []);

  useEffect(() => {
    if (lastActiveStatus === "SEARCH") {
      focusForm();
    } else {
      checkStatus("SEARCH");
    }
  }, [checkStatus, focusForm, lastActiveStatus]);

  return (
    <div className="fixed z-40 w-full bg-white">
      <div className="grid grid-cols-[1fr_auto_1fr] gap-2 items-center md:px-8 h-16 mx-auto px-2 w-full max-w-[1920px] shadow-xs">
        <div className="flex items-center gap-4">
          <svg
            className="w-6 fill-current"
            fill="none"
            viewBox="368 368 288 288"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M 423.129 370.365 C 425.817 372.122 426.402 374.471 426.402 383.613 C 426.402 394.92 426.46 394.982 438.909 394.634 C 444.988 394.512 446.391 394.277 447.267 393.398 C 448.144 392.52 448.378 390.937 448.612 382.377 L 448.904 372.357 L 450.541 370.947 C 452.353 369.425 456.503 369.017 459.366 370.13 C 462.114 371.131 462.464 372.888 462.873 387.954 C 463.283 403.194 463.516 404.185 466.731 406.115 C 468.192 406.943 472.634 407.055 511.854 407.055 C 554.404 407.055 555.339 407.055 557.209 405.891 C 560.541 403.838 560.833 402.193 560.833 387.423 C 560.833 376.524 561.008 373.879 561.768 372.418 C 563.346 369.252 565.041 368.955 581.114 369.017 C 598.006 369.017 600.636 369.364 602.799 371.54 C 604.319 373.062 604.377 373.296 604.669 382.326 C 604.844 387.362 605.196 391.877 605.488 392.346 C 606.598 394.042 609.871 394.747 616.594 394.747 C 622.731 394.747 623.432 394.634 624.835 393.398 C 626.881 391.642 627.407 388.833 627.466 380.212 L 627.466 372.949 L 629.219 371.182 C 630.973 369.486 631.089 369.425 635.882 369.599 C 640.149 369.834 641.026 370.018 642.311 371.243 C 643.188 372.061 644.065 373.531 644.357 374.471 C 644.649 375.462 644.883 390.12 644.942 407.055 L 645 437.831 L 643.714 440.467 C 642.896 441.989 641.551 443.572 640.324 444.277 C 638.278 445.451 637.577 445.451 511.97 445.625 L 385.663 445.747 L 383.676 444.399 C 382.624 443.694 381.104 442.172 380.403 441.11 L 379.058 439.118 L 379.058 406.534 C 379.058 381.683 379.234 373.593 379.818 372.479 C 380.227 371.652 381.455 370.539 382.565 369.956 C 384.435 368.955 386.189 368.904 403.081 369.078 C 419.68 369.252 421.667 369.364 423.129 370.365 Z M 640.441 459.813 C 644.591 462.622 644.708 463.153 644.708 478.689 C 644.708 491.876 644.649 492.642 643.48 494.225 C 642.779 495.104 641.376 496.391 640.266 497.034 C 638.337 498.147 637.051 498.209 606.89 498.382 C 572.581 498.556 572.581 498.556 570.36 495.216 C 569.425 493.755 569.308 492.111 569.308 478.515 C 569.308 464.154 569.367 463.326 570.536 461.743 C 571.179 460.865 572.64 459.639 573.75 459.047 C 575.562 458.117 578.075 458.056 607.066 458.168 L 638.337 458.352 L 640.441 459.813 Z M 450.95 459.578 C 451.827 460.109 453.054 461.396 453.639 462.387 C 454.632 464.031 454.749 465.553 454.749 478.566 C 454.749 494.337 454.632 494.869 451.125 497.146 C 449.664 498.147 446.975 498.209 417.634 498.382 C 387.416 498.495 385.663 498.444 383.734 497.443 C 382.624 496.799 381.104 495.451 380.403 494.399 C 379.117 492.519 379.058 491.988 379.058 479.22 C 379.058 466.319 379.117 465.911 380.461 463.684 C 381.221 462.448 382.857 460.803 384.085 460.048 L 386.365 458.638 L 417.81 458.638 C 445.923 458.638 449.489 458.761 450.95 459.578 Z M 554.988 460.691 C 557.735 463.326 558.027 465.206 557.794 479.864 C 557.619 492.223 557.56 493.285 556.391 494.807 C 553.585 498.617 555.28 498.495 512.029 498.495 C 475.206 498.495 472.751 498.382 470.472 497.381 C 466.322 495.512 466.088 494.337 466.264 477.341 L 466.439 462.622 L 468.66 460.63 L 470.822 458.638 L 511.97 458.761 L 553.176 458.934 L 554.988 460.691 Z M 501.741 511.865 C 506.009 513.97 506.067 514.266 506.067 530.619 C 506.125 546.625 506.009 547.034 502.56 549.322 C 501.099 550.313 498.118 550.374 462.932 550.547 C 436.981 550.67 424.239 550.547 422.778 550.078 C 421.492 549.73 420.089 548.729 419.271 547.565 C 417.985 545.747 417.926 545.154 417.751 533.081 C 417.634 526.166 417.693 519.363 417.926 518.015 C 418.394 514.971 420.557 512.162 423.07 511.457 C 424.122 511.161 441.598 510.864 462.347 510.864 C 496.89 510.813 499.93 510.864 501.741 511.865 Z M 602.624 512.57 C 605.721 515.44 605.838 516.145 605.838 531.15 C 605.838 544.102 605.721 545.216 604.669 547.034 C 602.39 550.721 603.325 550.67 561.593 550.67 C 519.218 550.67 520.737 550.782 518.575 546.564 C 517.64 544.746 517.581 542.928 517.698 530.037 L 517.874 515.553 L 519.627 513.735 C 520.562 512.744 522.14 511.692 523.134 511.457 C 524.069 511.161 541.954 510.926 562.996 510.987 L 601.046 511.099 L 602.624 512.57 Z M 639.739 511.743 C 641.201 512.335 642.545 513.449 643.363 514.848 C 644.649 516.901 644.708 517.432 644.708 530.854 C 644.708 544.041 644.649 544.807 643.48 546.39 C 641.084 549.608 638.98 550.313 631.265 550.547 C 623.082 550.844 620.627 550.139 618.698 547.034 C 617.587 545.216 617.529 544.102 617.529 530.742 C 617.529 514.674 617.705 513.735 621.679 511.804 C 624.426 510.456 636.35 510.395 639.739 511.743 Z M 403.607 512.856 C 406.237 515.206 406.529 516.962 406.529 531.436 C 406.529 546.451 406.413 547.095 403.081 549.322 C 401.269 550.547 400.45 550.67 393.495 550.67 C 386.481 550.67 385.722 550.547 383.442 549.199 C 379.176 546.738 379 545.685 379.176 529.914 L 379.351 516.145 L 381.104 514.327 C 382.097 513.275 383.384 512.213 384.027 511.927 C 384.669 511.631 389.053 511.508 393.729 511.569 C 401.386 511.692 402.438 511.804 403.607 512.856 Z M 451.125 564.327 C 454.515 566.553 454.749 567.779 454.749 583.203 C 454.749 596.155 454.632 597.442 453.58 599.138 C 451.359 602.896 452.002 602.835 417.05 602.835 C 382.857 602.835 383.91 602.948 380.812 599.607 L 379.351 598.024 L 379.176 583.489 L 379 568.954 L 380.929 566.727 C 384.319 562.856 383.091 562.978 417.926 563.152 C 446.975 563.275 449.664 563.326 451.125 564.327 Z M 553.585 564.5 C 557.56 567.432 557.619 567.606 557.794 582.202 C 557.969 595.093 557.911 595.562 556.625 598.085 C 554.053 603.07 556.508 602.835 511.854 602.835 C 468.484 602.835 469.595 602.896 467.315 599.199 C 466.264 597.381 466.146 596.267 466.146 583.612 C 466.146 569.25 466.439 567.371 468.952 565.144 C 469.595 564.562 470.881 563.857 471.758 563.561 C 472.693 563.275 491.104 563.091 512.73 563.152 C 551.364 563.275 552.007 563.275 553.585 564.5 Z M 640.675 564.5 C 644.591 567.432 644.708 567.728 644.883 581.324 C 645 589.761 644.883 594.51 644.357 596.206 C 643.48 599.495 640.617 602.069 637.285 602.539 C 635.882 602.713 621.036 602.835 604.26 602.713 L 573.75 602.539 L 571.938 600.782 C 569.191 598.147 568.899 596.267 569.133 581.62 C 569.308 569.25 569.367 568.198 570.536 566.666 C 571.179 565.787 572.64 564.562 573.75 563.969 C 575.562 563.04 578.075 562.978 607.416 563.091 C 638.337 563.275 639.097 563.275 640.675 564.5 Z M 403.256 616.604 C 406.237 618.606 406.529 620.241 406.529 635.133 C 406.529 649.903 406.295 651.19 403.139 653.54 C 401.795 654.53 400.45 654.704 394.08 654.888 C 385.604 655.123 384.319 654.765 381.338 651.721 L 379.351 649.668 L 379.176 635.838 C 378.942 619.015 379.234 618.014 384.728 615.961 C 388.176 614.674 400.976 615.082 403.256 616.604 Z M 502.56 616.492 C 505.95 618.719 506.067 619.127 506.009 635.194 C 505.95 651.66 505.891 651.834 501.741 653.948 C 499.93 654.939 496.774 655 462.055 655 C 420.44 655 421.96 655.123 419.154 651.313 C 417.985 649.73 417.926 648.729 417.751 635.889 C 417.576 622.876 417.634 621.997 418.803 619.597 C 421.024 614.909 418.803 615.144 462.347 615.317 C 498.118 615.44 501.099 615.491 502.56 616.492 Z M 602.507 616.492 C 605.721 618.606 605.897 619.658 605.721 635.654 L 605.546 650.199 L 604.085 651.834 C 601.104 655.062 601.923 655 561.418 655 C 520.153 655 521.029 655.062 518.75 651.364 C 517.64 649.546 517.581 648.432 517.581 635.011 C 517.581 620.945 517.64 620.537 518.925 618.606 C 519.685 617.493 521.147 616.318 522.257 615.91 C 523.777 615.378 533.83 615.205 562.587 615.317 C 598.065 615.44 601.046 615.491 602.507 616.492 Z M 640.675 616.665 C 644.649 619.597 644.708 619.893 644.883 633.724 C 645.117 648.208 644.708 650.312 641.026 653.131 C 639.038 654.653 638.629 654.704 631.031 654.888 C 623.491 655.062 622.965 655 621.036 653.713 C 617.646 651.425 617.529 650.843 617.529 635.246 C 617.529 620.475 617.821 618.545 620.043 616.962 C 622.205 615.378 623.432 615.205 631.381 615.317 C 638.103 615.44 639.272 615.613 640.675 616.665 Z"></path>
          </svg>
          <div className="text-2xl font-medium text-nowrap overflow-hidden overflow-ellipsis">
            bbscroll
          </div>
        </div>
        <div>
          <form
            ref={form}
            action={(formData) => {
              const { search } = Object.fromEntries(formData) as object as {
                search: string;
              };
              onSearch(search);
              if (window.innerWidth < 1024) {
                (document.activeElement as HTMLInputElement | null)?.blur();
              }
            }}
            className={`absolute has-focus-within:opacity-100 transition-opacity has-focus-within:pointer-events-auto lg:pointer-events-auto lg:opacity-100 left-0 top-16 lg:static p-2 flex-1 lg:w-[400px] w-full bg-white ${
              lastActiveStatus !== "SEARCH"
                ? "pointer-events-none opacity-0"
                : "opacity-100"
            }`}
          >
            <TutorialTip status="SEARCH" disabled={isSearch}>
              <div className="w-full grid grid-cols-[1fr_auto] gap-2">
                <Textfield
                  maxLength={80}
                  name="search"
                  size="sm"
                  placeholder="Search for anything"
                  leftIcon={<SearchIcon />}
                  defaultValue={currentSearch}
                />
                <Button
                  icon={<SendHorizonalIcon />}
                  size="sm"
                  variant="white"
                  disabled={isSearch}
                />
              </div>
            </TutorialTip>
          </form>
        </div>
        <div className="flex items-center justify-end gap-4 ">
          <Button
            size="sm"
            variant="white"
            className="border-none p-0 lg:hidden text-general-80"
            icon={<SearchIcon />}
            onClick={focusForm}
          />
          {session ? (
            <>
              {session.user?.image && (
                <Image
                  className="h-6 w-6 rounded-full"
                  src={session.user.image}
                  alt="avatar"
                  width={96}
                  height={96}
                />
              )}
              <Button
                onClick={() => {
                  setIsAuthLoading(true);
                  signOut();
                }}
                loading={isLoading}
                size="sm"
                variant="white"
                icon={<LogOutIcon />}
              />
            </>
          ) : (
            <GoogleAuthButton />
          )}
        </div>
      </div>
    </div>
  );
}
